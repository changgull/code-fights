Given this structure, if you only have access to Internet for a limited time period (duration seconds), some of your files might fail to sync either because you run out of time, or they don't fit the storageLimit.

Implement a function that tells you which files will be synced in duration seconds given the storageLimit.

Example

For
files = [[20, 5],
          [10, 7],
          [8, 10],
          [2, 20]],
storageLimit = 30,
uploadSpeed = 2,
duration = 100
the answer is

fileSyncOrder(files, storageLimit, uploadSpeed, duration) = [0, 2, 3].


There are four files to sync:

The first one is 20 KB, and you add it to your Dropbox folder 5 seconds after launching Dropbox. It takes 20 / 2 = 10 seconds for this file to be synced.
The second file is 10 KB. You add it to Dropbox 7 seconds after launching, and it takes 10 / 2 = 5 seconds to sync.
The third file is 8 KB, and you add it 10 seconds after launching Dropbox. It takes 8 / 2 = 4 seconds to sync.
The fourth and final file is 2 KB, you add it 20 seconds after launching Dropbox, and it takes 2 / 2 = 1 second to sync.
Here's what happens:

For the first 5 seconds there are no files to upload, so nothing happens.

5 seconds after launch the first file (with index 0) is added to the Dropbox folder, and the synchronization starts immediately.

7 seconds after launch the second file (with index 1) is added to the Dropbox folder, while the first file is still syncing.

Then, 10 after launch two events occur simultaneously:

the first file finishes syncing;
the third file is added to the Dropbox folder;
Since the third file is smaller than the second one, it is next in line to be synced.

It takes another 4 seconds to upload the third file.

This means that 14 seconds after launch, only the first and third files have synced.

And unfortunately, since 28 KB out of 30 KB in storage has been used by the first and third files, at 10 KB the second file would put you over the storage limit of 30 KB.

However, 20 seconds after launch, the fourth file (with index 3) is added to the Dropbox folder. It fits the storage limit, so synchronization starts right away.

Finally, 21 seconds after launch, the fourth file finishes syncing.

So, after 100 seconds only the first and the third files get synced.

For

files = [[10, 5]],
storageLimit = 100,
uploadSpeed = 1,
duration = 10
the answer is fileSyncOrder(files, storageLimit, uploadSpeed, duration) = [].

There is only one file but since uploadSpeed is quite low duration is not enough to complete the upload.

[input] array.array.integer files

files[i] describes the ith file:
files[i][0] equals the ith file's size in KBs.
files[i][1] equals the time when the ith file is added to Dropbox folder (given in seconds after launching Dropbox).
It is guaranteed that there will never be a moment in time when two or more files of the same size are awaiting synchronization.

[input] integer storageLimit

The maximum total size of synced files (in KBs).
[input] integer uploadSpeed

Your upload speed given in KBs/sec, which means that it takes files[i][0] / uploadSpeed to upload the ith file.
[input] integer duration

The period of time you're interested in.
[output] array.integer

Indices of the files which will be fully synced in duration seconds in the order of synchronization.
